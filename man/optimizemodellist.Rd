% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Optimizers.R
\name{optimizemodellist}
\alias{optimizemodellist}
\title{Optimal design constructor for linear and multinomial logit discrete choice designs}
\usage{
optimizemodellist(base_input_range, formulalist,
  objectivelist = rep("D-Opt", times = length(formulalist)),
  startingmat = NULL, referencemat = NULL, npoints = NULL,
  searchdirection = "row", weight = rep(1/length(formulalist), times =
  length(formulalist)), randomstarts = FALSE,
  searchstrat = "numoptimize", candmat = NULL, cexpoints = NULL,
  constrainnodeslist = rep(NA, times = length(formulalist)),
  extraparams = NULL, scalemat = TRUE, verbose = FALSE,
  prevoptimobject = NULL)
}
\arguments{
\item{base_input_range}{2 row matrix - Matrix with variable minimums and maximums for base variables. First row is minimum, second row is maximum. Names of colums should equal variable names used in formulas}

\item{formulalist}{list of formulas - list of formulas to simultaneously optimize design for}

\item{objectivelist}{list of characters - objective functions to use when optimizing each model in formulalist. Options are:
\describe{
  \item{D-Opt}{Maximizes X'X of centered and standardized model matrix}
  \item{I-Opt}{Minimizes the integral of the prediction variance over the design space}
  \item{SSE}{Minimizes sum of squared error between optimized design and values in startingmat. Uses centered and standardized model matrix for calculation.
             Useful for situations where a target starting design must be kept static with reference to a specific formula in formulalist that exists in a subspace of the entire design space.}
  }}

\item{startingmat}{matrix with named columns - Matrix to use as a design starting point. Also used as the reference for SSE calculations when that loss function is used}

\item{referencemat}{matrix with named columns - matrix used as the reference for SSE calculations when that loss function is used}

\item{npoints}{integer - number of design points. Only needed if startingmat is not provided}

\item{searchdirection}{character - Method used to perform optimization search. Options are:
\describe{
  \item{row}{Optimize by modifying one entire row at a time}
  \item{column}{Optimize by modifying one entire column at a time}
  \item{coordinate}{Optimize by modifying a single coordinate at a time}
  }}

\item{weight}{vector of numerics - weight for each formula's loss function to use to calculate overall loss from each loss function}

\item{randomstarts}{TRUE/FALSE - whether a random start should be used for each row/column iteration through the optimizer}

\item{searchstrat}{character - the type of search strategy to use. Options are:
\describe{
  \item{numoptimize}{numeric optimization. Does not require candidate points.}
  \item{fedorov}{Row exchange. Requires candmat argument to be provided}
  \item{cex}{Coordinate exchange. Requires cexpoints argument to be provided.}
  }}

\item{candmat}{matrix with column names corresponding to base variable names in base_input_range - matrix of candidate points used for fedorov optimization.}

\item{cexpoints}{integer stating how many evenly spaced points should be used across the allowed variable range for the coordinate exchange search strategy}

\item{constrainnodeslist}{list of data frames or matrices - list of constraining nodes for each formula if a rectangular space based on the base_input_range shouldn't be used. This is important for I-Optimality}

\item{extraparams}{list of extra parameters required for non-linear model optimization. May contain
\describe{
  \item{altvect}{vector of integers - vector listing the choice set that each row belongs to for discrete choice optimizers}
  \item{paramestimates}{vector of numerics - vector containing the prior estimates for each coefficient in the choice model. MUST BE IN THE SAME ORDER AS WOULD BE RETURNED BY THE MODEL MATRIX FUNCTION}
  }}

\item{scalemat}{logical, default TRUE - whether the base variable matrix for each model should be scaled from -1 to 1 or not}

\item{verbose}{logical - whether to print progress statements from optimizer each time an improvement occurs}

\item{prevoptimobject}{result of previous run of this function - carries fixed constants over from previous execution (formula processing, moment matrix, etc) to help speed execution. ONLY USE IF YOU ARE PASSING THE RESULT FROM A PREVIOUS RUN WITH EXACTLY THE SAME MODEL STRUCTURES AND RANGES}
}
\value{
\item{DesignMatrix}{The resulting design matrix}
  \item{OptimizerOutput}{The objective function result for the resulting design matrix}
  \item{FixedObjects}{A number of properties of the designs that do not change as the design is optimized.
        Used for subsequent re-optimization when the the output of this function is recycled and re-optimized.}
}
\description{
Creates an experimental design simultaneously optimized for one or more models.
  Can choose between D or I optimal objective functions.
  Can be used to create linear or discrete choice designs.
  May also be used to create forward-looking discrete choice tournament designs.
}
