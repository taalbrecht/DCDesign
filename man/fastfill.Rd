% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ModelFrameProcessing.R
\name{fastfill}
\alias{fastfill}
\title{Fast flexible filling design}
\usage{
fastfill(inputranges, constrainnodes = NULL, k, nrand = 100,
  scaleinputs = TRUE, clustermethod = "kmeans",
  centermethod = "centroid")
}
\arguments{
\item{inputranges}{matrix with named columns where first row is minimum and second row is maximum - range of base input variables that will be used as ranges to generate random points for design space filling (including geometric combination variables)}

\item{constrainnodes}{matrix with nodes of constraining manifold (hull) within rectangular inputranges space. Should be a matrix of nodes as produced by the convhulln function from the geometry package. It is ok to provide more points than necessary to construct the bounding manifold; they will simply be removed during the manifold construction process. Only works for convex manifolds for now}

\item{k}{integer - number of points to create for design}

\item{nrand}{integer, default = NULL - number of random points to generate per design point. If not supplied, 100 random points per design point will be used. If k0means algorithm doesn't converge, try adding more random starts}

\item{scaleinputs}{logical, default = TRUE - whether the input ranges}

\item{clustermethod}{character, default = "kmeans" - method used to identify clusters, can be ward (ward clustering) or kmeans (kmeans clustering)}

\item{centermethod}{character, default = "centroid" - method used to identify design point from each cluster. Options are:
centroid - creates a point from each cluster at the centroid
MaxPro - selects the points by choosing the point from each cluster that optimizes the maximum projection criteria}
}
\value{
\item{DesignMatrix}{A matrix of the resulting design with column names corresponding to variable names in inputranges}
}
\description{
Function to create fast flexible filling designs that uses clustering to identify design points that should be evenly spread across design space
}
