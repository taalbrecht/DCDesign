% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ModelFrameProcessing.R
\name{inhull}
\alias{inhull}
\title{Check if candidate points are inside, outside, or on the surface of a n-dimensional convex manifold (hull)}
\usage{
inhull(testpts, calpts, hull = convhulln(calpts),
  tol = mean(mean(abs(as.matrix(calpts)))) * sqrt(.Machine$double.eps))
}
\arguments{
\item{testpts}{An n x p matrix of points to test for hull membership. n data points, in p dimensions.
If you have many points to test, it is most efficient to call this function once with the entire set.}

\item{calpts}{An m x p array of vertices of the convex hull, as produced by the geometry::convhulln function.}

\item{hull}{(OPTIONAL) tessellation (or triangulation) generated by convhulln.
If hull is left empty or not supplied, then it will be generated which will take some extra time but will provide the same results.}

\item{tol}{Tolerance on the tests for inclusion in the convex hull.
You can think of tol as the distance a point may possibly lie outside the hull, and still be perceived as on the surface of the hull.
Because of numerical slop nothing can ever be done exactly here. I might guess a semi-intelligent value of tol to be tol = 1.e-13*mean(abs(calpts(:)))
In higher dimensions, the numerical issues of floating point arithmetic will probably suggest a larger value of tol.}
}
\value{
A vector of integers of length n where each entry corresponds to the same row in testpts. Value meanings are:
  1 = inside hull
  -1 = outside hull
  0 = on hull (to precision indicated by tol)
}
\description{
Use to determine if candidate points lie within or on the surface of a provided convex manifold.
  A similar function may eventually be added to the geometry package (currently developed and being added to the github version, just waiting for publication to CRAN).
  Based on Matlab code by John D'Errico 04 Mar 2006 (Updated 30 Oct 2006) \url{http://www.mathworks.com/matlabcentral/fileexchange/10226-inhull} with some modifications for greatly improved speed.
}
